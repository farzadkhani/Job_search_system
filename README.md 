# Job Search System

## Introduction
The Job Search System is a web-based platform designed to connect job seekers (candidates) with employers seeking to hire new talent. The system facilitates user registration, job postings, application submissions, and advanced search and filtering capabilities to enhance the recruitment process for both parties.

## Features
- **User Registration**: Allows users to sign up as either job seekers or employers.
- **Profile Management**: Users can create and edit their profiles, including uploading resumes for job seekers.
- **Job Posting**: Employers can create, edit, and manage job listings.
- **Job Applications**: Job seekers can apply to job postings.
- **Job Listings**: Job seekers can view and search through available job postings.
- **Advanced Search**: Implements efficient search algorithms to find relevant job listings based on user skills and preferences.
- **Filtering**: Enables job seekers to filter job listings based on various criteria such as salary range.
- **Authentication & Authorization**: Secure access control ensuring users can only perform actions permitted for their role.

## Technology Stack
- **Programming Language**: Python
- **Backend Framework**: Django with Django REST Framework
- **Database**: sqlite3, ElasticSearch
- **Authentication**: Simple JWT(JSON Web Tokens)
- **Version Control**: Git

## Class Diagram
![Class diagram illustrating the relationships between entities in the Job Search System](class_diagram.svg)

## Sample Request APIs in Postman Format
![sample request apis in postman format](job_search_system_sample_request.postman_collection.json)

## Documentation
- **{BaseURL}/docs/schema/redoc/
- **{BaseURL}/docs/schema/swagger-ui/

## Installation
1. **Clone the Repository**
    ```bash
    git clone https://github.com/farzadkhani/Job_search_system.git
    cd job_search_system
    make local_settings.py:
        cd core
        make copy from `sample_local_settings.py` and name `local_settings.py`
        update `local_settings.py` parameters
    in root of project:
        python manage.py makemigrations accounts
        python manage.py migrate accounts

        python manage.py makemigrations
        python manage.py migrate

## RUN
    In root of project:
        python manage.py migrate
        python manage.py runserver 127.0.0.1:8000
